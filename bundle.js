(function () {
'use strict';

class Messages {
    constructor($el) {
        this.$el = $el;
        this.$el.innerHTML = '<b>messages here</b>';
        this.data = {};
    }

    setData(data) {
        this.data = data;

        this.render();
    }

    addMessage(message) {
        if (!this.data.messages) {
            this.data.messages = [];
        }

        this.data.messages.push(message);
        this.render();
    }

    render() {
        if (this.data.messages) {
            let html = this.data.messages
                .map(item => this.tmplMessage(item.message))
                .join('\n');

            this.$el.innerHTML = html;
        } else {
            this.$el.innerHTML = 'no messages';
        }
    }

    tmplMessage(message) {
        return `<div class="message">${message}</div>`;
    }
}

class Form {
    constructor($el) {
        this.$el = $el;

        this.render();
    }

    render() {
        this.$el.innerHTML = `<form class="compose js-form" action="#">
        <input type="text" class="compose-input js-input" name="message" autocomplete="off"/>
        <button type="submit" class="btn">Send</button>`;

        this.initEvents();
    }

    initEvents() {
        this.$form = this.$el.querySelector('.js-form');
        this.$input = this.$form.querySelector('.js-input');

        this.$form.addEventListener('submit', this.onSubmit.bind(this));
    }

    onSubmit(event) {
        this.onSend({ user: 'Default', message: this.$input.value });
        this.$input.value = '';

        event.preventDefault();
    }

    onSend() {}
}

let $loading = document.querySelector('.js-loading');
let $container = document.querySelector('.js-components');

// load data
let data = {
    messages: [
        {
            user: 'John',
            message: 'Hi!',
        },
        {
            user: 'Jane',
            message: 'Hello there!',
        },
    ],
};

// messages
let $messages = document.createElement('div');
$messages.className = 'messages';
$container.appendChild($messages);

let messages = new Messages($messages);
messages.setData(data);

// compose
let $form = document.createElement('div');
$container.appendChild($form);

let compose = new Form($form);
compose.onSend = (message) => {
    messages.addMessage(message);
};

// ready
$loading.style.display = 'none';
$container.style.display = null;

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlcyI6WyJzcmMvY29tcG9uZW50cy9tZXNzYWdlcy9tZXNzYWdlcy5qcyIsInNyYy9jb21wb25lbnRzL2Zvcm0vZm9ybS5qcyIsInNyYy9tYWluLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIE1lc3NhZ2VzIHtcbiAgICBjb25zdHJ1Y3RvcigkZWwpIHtcbiAgICAgICAgdGhpcy4kZWwgPSAkZWw7XG4gICAgICAgIHRoaXMuJGVsLmlubmVySFRNTCA9ICc8Yj5tZXNzYWdlcyBoZXJlPC9iPic7XG4gICAgICAgIHRoaXMuZGF0YSA9IHt9O1xuICAgIH1cblxuICAgIHNldERhdGEoZGF0YSkge1xuICAgICAgICB0aGlzLmRhdGEgPSBkYXRhO1xuXG4gICAgICAgIHRoaXMucmVuZGVyKCk7XG4gICAgfVxuXG4gICAgYWRkTWVzc2FnZShtZXNzYWdlKSB7XG4gICAgICAgIGlmICghdGhpcy5kYXRhLm1lc3NhZ2VzKSB7XG4gICAgICAgICAgICB0aGlzLmRhdGEubWVzc2FnZXMgPSBbXTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZGF0YS5tZXNzYWdlcy5wdXNoKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLnJlbmRlcigpO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgaWYgKHRoaXMuZGF0YS5tZXNzYWdlcykge1xuICAgICAgICAgICAgbGV0IGh0bWwgPSB0aGlzLmRhdGEubWVzc2FnZXNcbiAgICAgICAgICAgICAgICAubWFwKGl0ZW0gPT4gdGhpcy50bXBsTWVzc2FnZShpdGVtLm1lc3NhZ2UpKVxuICAgICAgICAgICAgICAgIC5qb2luKCdcXG4nKTtcblxuICAgICAgICAgICAgdGhpcy4kZWwuaW5uZXJIVE1MID0gaHRtbDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuJGVsLmlubmVySFRNTCA9ICdubyBtZXNzYWdlcyc7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB0bXBsTWVzc2FnZShtZXNzYWdlKSB7XG4gICAgICAgIHJldHVybiBgPGRpdiBjbGFzcz1cIm1lc3NhZ2VcIj4ke21lc3NhZ2V9PC9kaXY+YDtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IE1lc3NhZ2VzO1xuIiwiY2xhc3MgRm9ybSB7XG4gICAgY29uc3RydWN0b3IoJGVsKSB7XG4gICAgICAgIHRoaXMuJGVsID0gJGVsO1xuXG4gICAgICAgIHRoaXMucmVuZGVyKCk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICB0aGlzLiRlbC5pbm5lckhUTUwgPSBgPGZvcm0gY2xhc3M9XCJjb21wb3NlIGpzLWZvcm1cIiBhY3Rpb249XCIjXCI+XG4gICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIGNsYXNzPVwiY29tcG9zZS1pbnB1dCBqcy1pbnB1dFwiIG5hbWU9XCJtZXNzYWdlXCIgYXV0b2NvbXBsZXRlPVwib2ZmXCIvPlxuICAgICAgICA8YnV0dG9uIHR5cGU9XCJzdWJtaXRcIiBjbGFzcz1cImJ0blwiPlNlbmQ8L2J1dHRvbj5gO1xuXG4gICAgICAgIHRoaXMuaW5pdEV2ZW50cygpO1xuICAgIH1cblxuICAgIGluaXRFdmVudHMoKSB7XG4gICAgICAgIHRoaXMuJGZvcm0gPSB0aGlzLiRlbC5xdWVyeVNlbGVjdG9yKCcuanMtZm9ybScpO1xuICAgICAgICB0aGlzLiRpbnB1dCA9IHRoaXMuJGZvcm0ucXVlcnlTZWxlY3RvcignLmpzLWlucHV0Jyk7XG5cbiAgICAgICAgdGhpcy4kZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCB0aGlzLm9uU3VibWl0LmJpbmQodGhpcykpO1xuICAgIH1cblxuICAgIG9uU3VibWl0KGV2ZW50KSB7XG4gICAgICAgIHRoaXMub25TZW5kKHsgdXNlcjogJ0RlZmF1bHQnLCBtZXNzYWdlOiB0aGlzLiRpbnB1dC52YWx1ZSB9KTtcbiAgICAgICAgdGhpcy4kaW5wdXQudmFsdWUgPSAnJztcblxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cblxuICAgIG9uU2VuZCgpIHt9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEZvcm07XG4iLCJpbXBvcnQgTWVzc2FnZXMgZnJvbSAnLi9jb21wb25lbnRzL21lc3NhZ2VzL21lc3NhZ2VzJztcbmltcG9ydCBGb3JtIGZyb20gJy4vY29tcG9uZW50cy9mb3JtL2Zvcm0nO1xuXG5sZXQgJGxvYWRpbmcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuanMtbG9hZGluZycpO1xubGV0ICRjb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuanMtY29tcG9uZW50cycpO1xuXG4vLyBsb2FkIGRhdGFcbmxldCBkYXRhID0ge1xuICAgIG1lc3NhZ2VzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIHVzZXI6ICdKb2huJyxcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdIaSEnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB1c2VyOiAnSmFuZScsXG4gICAgICAgICAgICBtZXNzYWdlOiAnSGVsbG8gdGhlcmUhJyxcbiAgICAgICAgfSxcbiAgICBdLFxufTtcblxuLy8gbWVzc2FnZXNcbmxldCAkbWVzc2FnZXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiRtZXNzYWdlcy5jbGFzc05hbWUgPSAnbWVzc2FnZXMnO1xuJGNvbnRhaW5lci5hcHBlbmRDaGlsZCgkbWVzc2FnZXMpO1xuXG5sZXQgbWVzc2FnZXMgPSBuZXcgTWVzc2FnZXMoJG1lc3NhZ2VzKTtcbm1lc3NhZ2VzLnNldERhdGEoZGF0YSk7XG5cbi8vIGNvbXBvc2VcbmxldCAkZm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuJGNvbnRhaW5lci5hcHBlbmRDaGlsZCgkZm9ybSk7XG5cbmxldCBjb21wb3NlID0gbmV3IEZvcm0oJGZvcm0pO1xuY29tcG9zZS5vblNlbmQgPSAobWVzc2FnZSkgPT4ge1xuICAgIG1lc3NhZ2VzLmFkZE1lc3NhZ2UobWVzc2FnZSk7XG59O1xuXG4vLyByZWFkeVxuJGxvYWRpbmcuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiRjb250YWluZXIuc3R5bGUuZGlzcGxheSA9IG51bGw7XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsTUFBTSxRQUFRLENBQUM7SUFDWCxXQUFXLENBQUMsR0FBRyxFQUFFO1FBQ2IsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUM7UUFDZixJQUFJLENBQUMsR0FBRyxDQUFDLFNBQVMsR0FBRyxzQkFBc0IsQ0FBQztRQUM1QyxJQUFJLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQztLQUNsQjs7SUFFRCxPQUFPLENBQUMsSUFBSSxFQUFFO1FBQ1YsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7O1FBRWpCLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztLQUNqQjs7SUFFRCxVQUFVLENBQUMsT0FBTyxFQUFFO1FBQ2hCLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNyQixJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUM7U0FDM0I7O1FBRUQsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2pDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztLQUNqQjs7SUFFRCxNQUFNLEdBQUc7UUFDTCxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ3BCLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUTtpQkFDeEIsR0FBRyxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztpQkFDM0MsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDOztZQUVoQixJQUFJLENBQUMsR0FBRyxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7U0FDN0IsTUFBTTtZQUNILElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxHQUFHLGFBQWEs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
